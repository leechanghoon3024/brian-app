name: Issue to Branch

on:
  issues:
    types: [labeled]  # 라벨 추가 시 실행

permissions:
  contents: write
  pull-requests: write  # PR 생성 권한 추가
  issues: write       # 이슈 수정 권한 추가

jobs:
  create-branch:
    if: contains(github.event.issue.labels.*.name, '🚀 Feature') || github.event.label.name == '🚀 Feature'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Git
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Create a new branch from dev with sanitization and duplicate check
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          
          
          ISSUE_TITLE_ORIG="${{ github.event.issue.title }}"
          echo "Original title: $ISSUE_TITLE_ORIG"

          
          SANITIZED_TITLE=$(echo "$ISSUE_TITLE_ORIG" | sed -E 's/[^A-Za-z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr '[:upper:]' '[:lower:]')
          echo "Sanitized title: $SANITIZED_TITLE"

          BRANCH_NAME="feature/${ISSUE_NUMBER}-${SANITIZED_TITLE}"
          echo "Branch name: $BRANCH_NAME"

         
          if git ls-remote --exit-code --heads origin "$BRANCH_NAME"; then
            echo "Branch $BRANCH_NAME already exists. Exiting."
            exit 0
          fi

          git fetch origin dev
          git checkout -b "$BRANCH_NAME" origin/dev
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git "$BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on Issue with Branch Link
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          BRANCH_NAME=${{ env.BRANCH_NAME }}
          COMMENT_BODY="🚀 브랜치 생성! \`$BRANCH_NAME\` . PR초안도 생성 .  [브랜치확인](https://github.com/${{ github.repository }}/tree/$BRANCH_NAME)"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/issues/$ISSUE_NUMBER/comments \
               -d "{\"body\": \"$COMMENT_BODY\"}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a Draft Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.BRANCH_NAME }}
          base: dev
          title: "🔀 ${{ env.BRANCH_NAME }}"
          body: "PR 자동생성 #${{ github.event.issue.number }}."
          draft: true  # PR을 Draft
